package org.bimserver.pb;

/******************************************************************************
 * Copyright (C) 2009-2013  BIMserver.org
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 * 
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *****************************************************************************/
option java_generic_services = true;

option java_outer_classname = "ServiceInterfaceImpl";

option optimize_for = SPEED;

service ServiceInterface {
	rpc addExtendedDataSchema (AddExtendedDataSchemaRequest) returns (VoidResponse);

	rpc addExtendedDataToProject (AddExtendedDataToProjectRequest) returns (VoidResponse);

	rpc addLocalServiceToProject (AddLocalServiceToProjectRequest) returns (VoidResponse);

	rpc addServiceToProject (AddServiceToProjectRequest) returns (VoidResponse);

	rpc addUser (AddUserRequest) returns (AddUserResponse);

	rpc addUserToExtendedDataSchema (AddUserToExtendedDataSchemaRequest) returns (VoidResponse);

	rpc addUserToProject (AddUserToProjectRequest) returns (AddUserToProjectResponse);

	rpc changeUserType (ChangeUserTypeRequest) returns (VoidResponse);

	rpc checkin (CheckinRequest) returns (CheckinResponse);

	rpc checkinFromUrl (CheckinFromUrlRequest) returns (CheckinFromUrlResponse);

	rpc cleanupLongAction (CleanupLongActionRequest) returns (VoidResponse);

	rpc compare (CompareRequest) returns (CompareResponse);

	rpc deleteService (DeleteServiceRequest) returns (VoidResponse);

	rpc deleteUser (DeleteUserRequest) returns (DeleteUserResponse);

	rpc downloadCompareResults (DownloadCompareResultsRequest) returns (DownloadCompareResultsResponse);

	rpc getAllAuthorizedUsersOfProject (GetAllAuthorizedUsersOfProjectRequest) returns (GetAllAuthorizedUsersOfProjectResponse);

	rpc getAllCheckoutsByUser (GetAllCheckoutsByUserRequest) returns (GetAllCheckoutsByUserResponse);

	rpc getAllCheckoutsOfProject (GetAllCheckoutsOfProjectRequest) returns (GetAllCheckoutsOfProjectResponse);

	rpc getAllCheckoutsOfProjectAndSubProjects (GetAllCheckoutsOfProjectAndSubProjectsRequest) returns (GetAllCheckoutsOfProjectAndSubProjectsResponse);

	rpc getAllCheckoutsOfRevision (GetAllCheckoutsOfRevisionRequest) returns (GetAllCheckoutsOfRevisionResponse);

	rpc getAllExtendedDataSchemas (GetAllExtendedDataSchemasRequest) returns (GetAllExtendedDataSchemasResponse);

	rpc getAllLocalProfiles (GetAllLocalProfilesRequest) returns (GetAllLocalProfilesResponse);

	rpc getAllLocalServiceDescriptors (GetAllLocalServiceDescriptorsRequest) returns (GetAllLocalServiceDescriptorsResponse);

	rpc getAllNonAuthorizedProjectsOfUser (GetAllNonAuthorizedProjectsOfUserRequest) returns (GetAllNonAuthorizedProjectsOfUserResponse);

	rpc getAllNonAuthorizedUsersOfProject (GetAllNonAuthorizedUsersOfProjectRequest) returns (GetAllNonAuthorizedUsersOfProjectResponse);

	rpc getAllPrivateProfiles (GetAllPrivateProfilesRequest) returns (GetAllPrivateProfilesResponse);

	rpc getAllPublicProfiles (GetAllPublicProfilesRequest) returns (GetAllPublicProfilesResponse);

	rpc getAllReadableProjects (GetAllReadableProjectsRequest) returns (GetAllReadableProjectsResponse);

	rpc getAllRelatedProjects (GetAllRelatedProjectsRequest) returns (GetAllRelatedProjectsResponse);

	rpc getAllRepositoryExtendedDataSchemas (GetAllRepositoryExtendedDataSchemasRequest) returns (GetAllRepositoryExtendedDataSchemasResponse);

	rpc getAllRevisionsByUser (GetAllRevisionsByUserRequest) returns (GetAllRevisionsByUserResponse);

	rpc getAllServiceDescriptors (GetAllServiceDescriptorsRequest) returns (GetAllServiceDescriptorsResponse);

	rpc getAllServicesOfProject (GetAllServicesOfProjectRequest) returns (GetAllServicesOfProjectResponse);

	rpc getAllUsers (GetAllUsersRequest) returns (GetAllUsersResponse);

	rpc getAllWritableProjects (GetAllWritableProjectsRequest) returns (GetAllWritableProjectsResponse);

	rpc getAvailableClasses (GetAvailableClassesRequest) returns (GetAvailableClassesResponse);

	rpc getAvailableClassesInRevision (GetAvailableClassesInRevisionRequest) returns (GetAvailableClassesInRevisionResponse);

	rpc getCheckinWarnings (GetCheckinWarningsRequest) returns (GetCheckinWarningsResponse);

	rpc getCheckoutWarnings (GetCheckoutWarningsRequest) returns (GetCheckoutWarningsResponse);

	rpc getExtendedDataSchemaFromRepository (GetExtendedDataSchemaFromRepositoryRequest) returns (GetExtendedDataSchemaFromRepositoryResponse);

	rpc getFile (GetFileRequest) returns (GetFileResponse);

	rpc getGeoTag (GetGeoTagRequest) returns (GetGeoTagResponse);

	rpc getOidByGuid (GetOidByGuidRequest) returns (GetOidByGuidResponse);

	rpc getQueryEngineExample (GetQueryEngineExampleRequest) returns (GetQueryEngineExampleResponse);

	rpc getQueryEngineExampleKeys (GetQueryEngineExampleKeysRequest) returns (GetQueryEngineExampleKeysResponse);

	rpc getRevisionSummary (GetRevisionSummaryRequest) returns (GetRevisionSummaryResponse);

	rpc getService (GetServiceRequest) returns (GetServiceResponse);

	rpc getServiceDescriptor (GetServiceDescriptorRequest) returns (GetServiceDescriptorResponse);

	rpc getUserByUoid (GetUserByUoidRequest) returns (GetUserByUoidResponse);

	rpc getUserByUserName (GetUserByUserNameRequest) returns (GetUserByUserNameResponse);

	rpc getUserRelatedLogs (GetUserRelatedLogsRequest) returns (GetUserRelatedLogsResponse);

	rpc getUserSettings (GetUserSettingsRequest) returns (GetUserSettingsResponse);

	rpc getUsersProjects (GetUsersProjectsRequest) returns (GetUsersProjectsResponse);

	rpc removeUserFromExtendedDataSchema (RemoveUserFromExtendedDataSchemaRequest) returns (VoidResponse);

	rpc removeUserFromProject (RemoveUserFromProjectRequest) returns (RemoveUserFromProjectResponse);

	rpc sendCompareEmail (SendCompareEmailRequest) returns (VoidResponse);

	rpc setRevisionTag (SetRevisionTagRequest) returns (VoidResponse);

	rpc shareRevision (ShareRevisionRequest) returns (ShareRevisionResponse);

	rpc triggerNewExtendedData (TriggerNewExtendedDataRequest) returns (VoidResponse);

	rpc triggerNewRevision (TriggerNewRevisionRequest) returns (VoidResponse);

	rpc undeleteUser (UndeleteUserRequest) returns (UndeleteUserResponse);

	rpc updateGeoTag (UpdateGeoTagRequest) returns (VoidResponse);

	rpc updateProject (UpdateProjectRequest) returns (VoidResponse);

	rpc updateRevision (UpdateRevisionRequest) returns (VoidResponse);

	rpc uploadFile (UploadFileRequest) returns (UploadFileResponse);

	rpc userHasCheckinRights (UserHasCheckinRightsRequest) returns (UserHasCheckinRightsResponse);

	rpc userHasRights (UserHasRightsRequest) returns (UserHasRightsResponse);

}

message VoidResponse {
	optional string errorMessage = 1;
}

message Void {
}enum SExtendedDataSchemaType{
	SExtendedDataSchemaType_XSD = 0;
	SExtendedDataSchemaType_PDF = 1;
	SExtendedDataSchemaType_TXT = 2;
}

message SExtendedDataSchema {
	optional int64 size = 1;
	optional string name = 2;
	optional string namespace = 3;
	optional string description = 4;
	optional int64 oid = 5;
	optional SExtendedDataSchemaType type = 6;
	optional int32 rid = 7;
	optional string url = 8;
	repeated int64 users = 9;
	optional int64 fileId = 10;
	optional bool validate = 11;
	repeated int64 extendedData = 12;
}

message AddExtendedDataSchemaRequest {
	optional SExtendedDataSchema extendedDataSchema = 1;
}

message SExtendedData {
	optional int64 revisionId = 1;
	optional int64 size = 2;
	optional int64 added = 3;
	optional int64 schemaId = 4;
	optional int64 oid = 5;
	optional int32 rid = 6;
	optional string title = 7;
	optional int64 userId = 8;
	optional int64 projectId = 9;
	optional string url = 10;
	optional int64 fileId = 11;
}

message AddExtendedDataToProjectRequest {
	optional int64 poid = 1;
	optional SExtendedData extendedData = 2;
}

enum SAccessMethod{
	SAccessMethod_SOAP = 0;
	SAccessMethod_WEB_INTERFACE = 1;
	SAccessMethod_INTERNAL = 2;
	SAccessMethod_REST = 3;
	SAccessMethod_SYNDICATION = 4;
	SAccessMethod_JSON = 5;
	SAccessMethod_PROTOCOL_BUFFERS = 6;
}

enum STrigger{
	STrigger_NEW_REVISION = 0;
	STrigger_NEW_PROJECT = 1;
	STrigger_NEW_EXTENDED_DATA = 2;
}

message SService {
	optional string profileName = 1;
	optional string profileDescription = 2;
	optional int64 writeRevisionId = 3;
	optional bool readRevision = 4;
	optional int64 internalServiceId = 5;
	optional string description = 6;
	optional SAccessMethod notificationProtocol = 7;
	optional int64 oid = 8;
	optional STrigger trigger = 9;
	optional string serviceName = 10;
	optional int32 rid = 11;
	optional int64 writeExtendedDataId = 12;
	optional int64 userId = 13;
	optional string url = 14;
	optional string serviceIdentifier = 15;
	optional string token = 16;
	optional bool profilePublic = 17;
	optional string name = 18;
	optional string profileIdentifier = 19;
	optional int64 readExtendedDataId = 20;
	optional int64 projectId = 21;
	optional string providerName = 22;
}

message AddLocalServiceToProjectRequest {
	optional int64 poid = 1;
	optional SService sService = 2;
	optional int64 internalServiceOid = 3;
}

message AddServiceToProjectRequest {
	optional int64 poid = 1;
	optional SService sService = 2;
}

enum SUserType{
	SUserType_SYSTEM = 0;
	SUserType_ADMIN = 1;
	SUserType_USER = 2;
	SUserType_READ_ONLY = 3;
}

message AddUserRequest {
	optional string username = 1;
	optional string name = 2;
	optional SUserType type = 3;
	optional bool selfRegistration = 4;
	optional string resetUrl = 5;
}

enum SObjectState{
	SObjectState_ACTIVE = 0;
	SObjectState_DELETED = 1;
}

message SUser {
	optional int64 oid = 1;
	repeated int64 services = 2;
	optional int32 rid = 3;
	repeated int64 hasRightsOn = 4;
	optional int64 createdOn = 5;
	optional bytes passwordHash = 6;
	optional string token = 7;
	optional int64 lastSeen = 8;
	optional bytes validationToken = 9;
	optional int64 userSettingsId = 10;
	repeated int64 schemas = 11;
	optional string name = 12;
	repeated int64 revisions = 13;
	optional SObjectState state = 14;
	optional SUserType userType = 15;
	repeated int64 logs = 16;
	optional bytes passwordSalt = 17;
	optional int64 createdById = 18;
	optional string username = 19;
	optional int64 validationTokenCreated = 20;
	repeated int64 extendedData = 21;
}

message AddUserResponse {
	optional string errorMessage = 1;
	optional SUser value = 2;
}

message AddUserToExtendedDataSchemaRequest {
	optional int64 uoid = 1;
	optional int64 edsid = 2;
}

message AddUserToProjectRequest {
	optional int64 uoid = 1;
	optional int64 poid = 2;
}

message AddUserToProjectResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message ChangeUserTypeRequest {
	optional int64 uoid = 1;
	optional SUserType userType = 2;
}

message CheckinRequest {
	optional int64 poid = 1;
	optional string comment = 2;
	optional int64 deserializerOid = 3;
	optional int64 fileSize = 4;
	optional string fileName = 5;
	optional bytes data = 6;
	optional bool merge = 7;
	optional bool sync = 8;
}

message CheckinResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message CheckinFromUrlRequest {
	optional int64 poid = 1;
	optional string comment = 2;
	optional int64 deserializerOid = 3;
	optional string fileName = 4;
	optional string url = 5;
	optional bool merge = 6;
	optional bool sync = 7;
}

message CheckinFromUrlResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message CleanupLongActionRequest {
	optional int64 actionId = 1;
}

enum SCompareType{
	SCompareType_ALL = 0;
	SCompareType_ADD = 1;
	SCompareType_MODIFY = 2;
	SCompareType_DELETE = 3;
}

message CompareRequest {
	optional int64 roid1 = 1;
	optional int64 roid2 = 2;
	optional SCompareType sCompareType = 3;
	optional int64 mcid = 4;
}

message SObjectRemoved {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SObjectModified {
	optional string newValue = 1;
	optional string fieldName = 2;
	optional string oldValue = 3;
	optional int64 oid = 4;
	optional int32 rid = 5;
}

message SObjectAdded {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SSimpleDataValue {
	optional string stringValue = 1;
	optional int64 oid = 2;
	optional int32 rid = 3;
}

message SReferenceDataValue {
	optional string typeName = 1;
	optional string guid = 2;
	optional int64 oid = 3;
	optional int32 rid = 4;
}

message SListDataValue {
	repeated SDataValue values = 1;
	optional int64 oid = 2;
	optional int32 rid = 3;
}

message SDataValue {
	required string __actual_type = 1;
	optional SSimpleDataValue __SSimpleDataValue = 2;
	optional SReferenceDataValue __SReferenceDataValue = 3;
	optional SListDataValue __SListDataValue = 4;
	optional string fieldName = 5;
	optional int64 oid = 6;
	optional int32 rid = 7;
}

message SDataObject {
	repeated SDataValue values = 1;
	optional string name = 2;
	optional string guid = 3;
	optional int64 oid = 4;
	optional string type = 5;
	optional int32 rid = 6;
}

message SCompareItem {
	required string __actual_type = 1;
	optional SObjectRemoved __SObjectRemoved = 2;
	optional SObjectModified __SObjectModified = 3;
	optional SObjectAdded __SObjectAdded = 4;
	optional SDataObject dataObject = 5;
	optional int64 oid = 6;
	optional int32 rid = 7;
}

message SCompareContainer {
	optional int64 oid = 1;
	optional string type = 2;
	optional int32 rid = 3;
	repeated SCompareItem items = 4;
}

message SCompareResult {
	optional int64 oid = 1;
	optional int32 rid = 2;
	repeated SCompareContainer items = 3;
}

message CompareResponse {
	optional string errorMessage = 1;
	optional SCompareResult value = 2;
}

message DeleteServiceRequest {
	optional int64 oid = 1;
}

message DeleteUserRequest {
	optional int64 uoid = 1;
}

message DeleteUserResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message DownloadCompareResultsRequest {
	optional int64 serializerOid = 1;
	optional int64 roid1 = 2;
	optional int64 roid2 = 3;
	optional int64 mcid = 4;
	optional SCompareType type = 5;
	optional bool sync = 6;
}

message DownloadCompareResultsResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message GetAllAuthorizedUsersOfProjectRequest {
	optional int64 poid = 1;
}

message GetAllAuthorizedUsersOfProjectResponse {
	optional string errorMessage = 1;
	repeated SUser value = 2;
}

message GetAllCheckoutsByUserRequest {
	optional int64 uoid = 1;
}

message SRevision {
	optional int64 date = 1;
	repeated int64 checkouts = 2;
	optional string lastError = 3;
	repeated int64 concreteRevisions = 4;
	optional int64 oid = 5;
	optional int32 rid = 6;
	optional int64 userId = 7;
	optional bool hasGeometry = 8;
	optional int64 size = 9;
	optional string comment = 10;
	optional int64 lastConcreteRevisionId = 11;
	optional int32 id = 12;
	optional string tag = 13;
	optional int64 serviceId = 14;
	repeated int64 logs = 15;
	optional int64 projectId = 16;
	repeated int64 extendedData = 17;
	optional int32 bmi = 18;
}

message SCheckout {
	optional int64 date = 1;
	optional SRevision checkin = 2;
	optional bool active = 3;
	optional int64 oid = 4;
	optional int32 rid = 5;
	repeated int64 logs = 6;
	optional int64 userId = 7;
	optional int64 projectId = 8;
	optional SRevision revision = 9;
}

message GetAllCheckoutsByUserResponse {
	optional string errorMessage = 1;
	repeated SCheckout value = 2;
}

message GetAllCheckoutsOfProjectRequest {
	optional int64 poid = 1;
}

message GetAllCheckoutsOfProjectResponse {
	optional string errorMessage = 1;
	repeated SCheckout value = 2;
}

message GetAllCheckoutsOfProjectAndSubProjectsRequest {
	optional int64 poid = 1;
}

message GetAllCheckoutsOfProjectAndSubProjectsResponse {
	optional string errorMessage = 1;
	repeated SCheckout value = 2;
}

message GetAllCheckoutsOfRevisionRequest {
	optional int64 roid = 1;
}

message GetAllCheckoutsOfRevisionResponse {
	optional string errorMessage = 1;
	repeated SCheckout value = 2;
}

message GetAllExtendedDataSchemasRequest {
}

message GetAllExtendedDataSchemasResponse {
	optional string errorMessage = 1;
	repeated SExtendedDataSchema value = 2;
}

message GetAllLocalProfilesRequest {
	optional string serviceIdentifier = 1;
}

message SProfileDescriptor {
	optional string identifier = 1;
	optional string name = 2;
	optional bool publicProfile = 3;
	optional string description = 4;
}

message GetAllLocalProfilesResponse {
	optional string errorMessage = 1;
	repeated SProfileDescriptor value = 2;
}

message GetAllLocalServiceDescriptorsRequest {
}

message SServiceDescriptor {
	optional string writeExtendedData = 1;
	optional string identifier = 2;
	optional bool readRevision = 3;
	optional string name = 4;
	optional string description = 5;
	optional SAccessMethod notificationProtocol = 6;
	optional STrigger trigger = 7;
	optional string readExtendedData = 8;
	optional bool writeRevision = 9;
	optional string url = 10;
	optional string providerName = 11;
	optional string token = 12;
}

message GetAllLocalServiceDescriptorsResponse {
	optional string errorMessage = 1;
	repeated SServiceDescriptor value = 2;
}

message GetAllNonAuthorizedProjectsOfUserRequest {
	optional int64 uoid = 1;
}

enum SSIPrefix{
	SSIPrefix_meter = 0;
	SSIPrefix_attometer = 1;
	SSIPrefix_femtometer = 2;
	SSIPrefix_picometer = 3;
	SSIPrefix_nanometer = 4;
	SSIPrefix_micrometer = 5;
	SSIPrefix_millimeter = 6;
	SSIPrefix_centimeter = 7;
	SSIPrefix_decimeter = 8;
	SSIPrefix_decameter = 9;
	SSIPrefix_hectometer = 10;
	SSIPrefix_kilometer = 11;
	SSIPrefix_megameter = 12;
	SSIPrefix_gigameter = 13;
	SSIPrefix_terameter = 14;
	SSIPrefix_petameter = 15;
	SSIPrefix_exameter = 16;
}

message SProject {
	optional int64 geoTagId = 1;
	repeated int64 checkouts = 2;
	repeated int64 subProjects = 3;
	optional string description = 4;
	repeated int64 concreteRevisions = 5;
	optional int64 oid = 6;
	repeated int64 services = 7;
	optional int32 rid = 8;
	optional int64 parentId = 9;
	optional int64 lastRevisionId = 10;
	repeated int64 hasAuthorizedUsers = 11;
	optional int64 createdDate = 12;
	optional SSIPrefix exportLengthMeasurePrefix = 13;
	optional string name = 14;
	repeated int64 revisions = 15;
	optional int64 lastConcreteRevisionId = 16;
	optional int32 id = 17;
	optional SObjectState state = 18;
	repeated int64 logs = 19;
	optional int64 createdById = 20;
	repeated int64 extendedData = 21;
}

message GetAllNonAuthorizedProjectsOfUserResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message GetAllNonAuthorizedUsersOfProjectRequest {
	optional int64 poid = 1;
}

message GetAllNonAuthorizedUsersOfProjectResponse {
	optional string errorMessage = 1;
	repeated SUser value = 2;
}

message GetAllPrivateProfilesRequest {
	optional string notificationsUrl = 1;
	optional string serviceIdentifier = 2;
	optional string token = 3;
}

message GetAllPrivateProfilesResponse {
	optional string errorMessage = 1;
	repeated SProfileDescriptor value = 2;
}

message GetAllPublicProfilesRequest {
	optional string notificationsUrl = 1;
	optional string serviceIdentifier = 2;
}

message GetAllPublicProfilesResponse {
	optional string errorMessage = 1;
	repeated SProfileDescriptor value = 2;
}

message GetAllReadableProjectsRequest {
}

message GetAllReadableProjectsResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message GetAllRelatedProjectsRequest {
	optional int64 poid = 1;
}

message SProjectSmall {
	optional string name = 1;
	optional int64 oid = 2;
	optional int32 rid = 3;
	optional int64 parentId = 4;
}

message GetAllRelatedProjectsResponse {
	optional string errorMessage = 1;
	repeated SProjectSmall value = 2;
}

message GetAllRepositoryExtendedDataSchemasRequest {
}

message GetAllRepositoryExtendedDataSchemasResponse {
	optional string errorMessage = 1;
	repeated SExtendedDataSchema value = 2;
}

message GetAllRevisionsByUserRequest {
	optional int64 uoid = 1;
}

message GetAllRevisionsByUserResponse {
	optional string errorMessage = 1;
	repeated SRevision value = 2;
}

message GetAllServiceDescriptorsRequest {
}

message GetAllServiceDescriptorsResponse {
	optional string errorMessage = 1;
	repeated SServiceDescriptor value = 2;
}

message GetAllServicesOfProjectRequest {
	optional int64 poid = 1;
}

message GetAllServicesOfProjectResponse {
	optional string errorMessage = 1;
	repeated SService value = 2;
}

message GetAllUsersRequest {
}

message GetAllUsersResponse {
	optional string errorMessage = 1;
	repeated SUser value = 2;
}

message GetAllWritableProjectsRequest {
}

message GetAllWritableProjectsResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message GetAvailableClassesRequest {
}

message GetAvailableClassesResponse {
	optional string errorMessage = 1;
	repeated string value = 2;
}

message GetAvailableClassesInRevisionRequest {
	optional int64 roid = 1;
}

message GetAvailableClassesInRevisionResponse {
	optional string errorMessage = 1;
	repeated string value = 2;
}

message GetCheckinWarningsRequest {
	optional int64 poid = 1;
}

message GetCheckinWarningsResponse {
	optional string errorMessage = 1;
	repeated string value = 2;
}

message GetCheckoutWarningsRequest {
	optional int64 poid = 1;
}

message GetCheckoutWarningsResponse {
	optional string errorMessage = 1;
	repeated string value = 2;
}

message GetExtendedDataSchemaFromRepositoryRequest {
	optional string namespace = 1;
}

message GetExtendedDataSchemaFromRepositoryResponse {
	optional string errorMessage = 1;
	optional SExtendedDataSchema value = 2;
}

message GetFileRequest {
	optional int64 fileId = 1;
}

message SFile {
	optional string filename = 1;
	optional bytes data = 2;
	optional string mime = 3;
	optional int64 oid = 4;
	optional int32 rid = 5;
}

message GetFileResponse {
	optional string errorMessage = 1;
	optional SFile value = 2;
}

message GetGeoTagRequest {
	optional int64 goid = 1;
}

message SGeoTag {
	optional int32 epsg = 1;
	repeated int64 projects = 2;
	optional double x = 3;
	optional double y = 4;
	optional double z = 5;
	optional int64 oid = 6;
	optional int32 rid = 7;
	optional bool enabled = 8;
	optional double directionAngle = 9;
}

message GetGeoTagResponse {
	optional string errorMessage = 1;
	optional SGeoTag value = 2;
}

message GetOidByGuidRequest {
	optional int64 roid = 1;
	optional string guid = 2;
}

message GetOidByGuidResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message GetQueryEngineExampleRequest {
	optional int64 qeid = 1;
	optional string key = 2;
}

message GetQueryEngineExampleResponse {
	optional string errorMessage = 1;
	optional string value = 2;
}

message GetQueryEngineExampleKeysRequest {
	optional int64 qeid = 1;
}

message GetQueryEngineExampleKeysResponse {
	optional string errorMessage = 1;
	repeated string value = 2;
}

message GetRevisionSummaryRequest {
	optional int64 roid = 1;
}

message SRevisionSummaryType {
	optional string name = 1;
	optional int32 count = 2;
	optional int64 oid = 3;
	optional int32 rid = 4;
}

message SRevisionSummaryContainer {
	repeated SRevisionSummaryType types = 1;
	optional string name = 2;
	optional int64 oid = 3;
	optional int32 rid = 4;
}

message SRevisionSummary {
	optional int64 oid = 1;
	optional int32 rid = 2;
	repeated SRevisionSummaryContainer list = 3;
}

message GetRevisionSummaryResponse {
	optional string errorMessage = 1;
	optional SRevisionSummary value = 2;
}

message GetServiceRequest {
	optional int64 soid = 1;
}

message GetServiceResponse {
	optional string errorMessage = 1;
	optional SService value = 2;
}

message GetServiceDescriptorRequest {
	optional string url = 1;
}

message GetServiceDescriptorResponse {
	optional string errorMessage = 1;
	optional SServiceDescriptor value = 2;
}

message GetUserByUoidRequest {
	optional int64 uoid = 1;
}

message GetUserByUoidResponse {
	optional string errorMessage = 1;
	optional SUser value = 2;
}

message GetUserByUserNameRequest {
	optional string username = 1;
}

message GetUserByUserNameResponse {
	optional string errorMessage = 1;
	optional SUser value = 2;
}

message GetUserRelatedLogsRequest {
	optional int64 uoid = 1;
}

message SExtendedDataAddedToRevision {
	optional int64 revisionId = 1;
	optional int64 extendedDataId = 2;
	optional int64 oid = 3;
	optional int32 rid = 4;
}

message SPasswordChanged {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SUserUndeleted {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SPasswordReset {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SNewUserAdded {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SUserDeleted {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SUserChanged {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SUserAddedToProject {
	optional int64 oid = 1;
	optional int32 rid = 2;
	optional int64 projectId = 3;
}

message SUserRemovedFromProject {
	optional int64 oid = 1;
	optional int32 rid = 2;
	optional int64 projectId = 3;
}

message SUserRelated {
	required string __actual_type = 1;
	optional SPasswordChanged __SPasswordChanged = 2;
	optional SUserUndeleted __SUserUndeleted = 3;
	optional SPasswordReset __SPasswordReset = 4;
	optional SNewUserAdded __SNewUserAdded = 5;
	optional SUserDeleted __SUserDeleted = 6;
	optional SUserChanged __SUserChanged = 7;
	optional SUserAddedToProject __SUserAddedToProject = 8;
	optional SUserRemovedFromProject __SUserRemovedFromProject = 9;
	optional int64 oid = 10;
	optional int32 rid = 11;
	optional int64 userId = 12;
}

message SExtendedDataAddedToProject {
	optional int64 extendedDataId = 1;
	optional int64 oid = 2;
	optional int32 rid = 3;
	optional int64 projectId = 4;
}

message SNewCheckoutAdded {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SCheckoutRelated {
	required string __actual_type = 1;
	optional SNewCheckoutAdded __SNewCheckoutAdded = 2;
	optional int64 oid = 3;
	optional int32 rid = 4;
	optional int64 checkoutId = 5;
}

message SDownload {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SProjectUndeleted {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SNewProjectAdded {
	optional int64 parentProjectId = 1;
	optional int64 oid = 2;
	optional int32 rid = 3;
}

message SProjectDeleted {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SProjectUpdated {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SProjectRelated {
	required string __actual_type = 1;
	optional SProjectUndeleted __SProjectUndeleted = 2;
	optional SNewProjectAdded __SNewProjectAdded = 3;
	optional SProjectDeleted __SProjectDeleted = 4;
	optional SProjectUpdated __SProjectUpdated = 5;
	optional int64 oid = 6;
	optional int32 rid = 7;
	optional int64 projectId = 8;
}

message SGeoTagUpdated {
	optional int64 geoTagId = 1;
	optional int64 oid = 2;
	optional int32 rid = 3;
}

message SSettingsSaved {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SDatabaseCreated {
	optional string path = 1;
	optional int64 oid = 2;
	optional int32 rid = 3;
	optional int32 version = 4;
}

message SNewObjectIDMUploaded {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SRevisionBranched {
	optional int64 oldrevisionId = 1;
	optional int64 oid = 2;
	optional int32 rid = 3;
	optional int64 newrevisionId = 4;
}

message SRevisionUpdated {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

message SNewRevisionAdded {
	optional int64 oid = 1;
	optional int32 rid = 2;
	optional int64 projectId = 3;
}

message SRevisionRelated {
	required string __actual_type = 1;
	optional SRevisionUpdated __SRevisionUpdated = 2;
	optional SNewRevisionAdded __SNewRevisionAdded = 3;
	optional int64 revisionId = 4;
	optional int64 oid = 5;
	optional int32 rid = 6;
}

message SServerStarted {
	optional int64 oid = 1;
	optional int32 rid = 2;
}

enum SNotifictionResultEnum{
	SNotifictionResultEnum_NR_ERROR = 0;
	SNotifictionResultEnum_SUCCESS = 1;
	SNotifictionResultEnum_PROGRESS_UNKNOWN = 2;
	SNotifictionResultEnum_PROGRESS_PERCENTAGE = 3;
}

message SRemoteServiceCalled {
	repeated string warnings = 1;
	optional int32 percentage = 2;
	optional SNotifictionResultEnum state = 3;
	optional int64 oid = 4;
	optional int32 rid = 5;
	optional int64 serviceId = 6;
	repeated string errors = 7;
	repeated string infos = 8;
}

message SLogAction {
	required string __actual_type = 1;
	optional SExtendedDataAddedToRevision __SExtendedDataAddedToRevision = 2;
	optional SUserRelated __SUserRelated = 3;
	optional SExtendedDataAddedToProject __SExtendedDataAddedToProject = 4;
	optional SCheckoutRelated __SCheckoutRelated = 5;
	optional SDownload __SDownload = 6;
	optional SProjectRelated __SProjectRelated = 7;
	optional SGeoTagUpdated __SGeoTagUpdated = 8;
	optional SSettingsSaved __SSettingsSaved = 9;
	optional SDatabaseCreated __SDatabaseCreated = 10;
	optional SNewObjectIDMUploaded __SNewObjectIDMUploaded = 11;
	optional SRevisionBranched __SRevisionBranched = 12;
	optional SRevisionRelated __SRevisionRelated = 13;
	optional SServerStarted __SServerStarted = 14;
	optional SRemoteServiceCalled __SRemoteServiceCalled = 15;
	optional SAccessMethod accessMethod = 16;
	optional int64 date = 17;
	optional int64 executorId = 18;
	optional int64 oid = 19;
	optional int32 rid = 20;
}

message GetUserRelatedLogsResponse {
	optional string errorMessage = 1;
	repeated SLogAction value = 2;
}

message GetUserSettingsRequest {
}

message SUserSettings {
	optional int64 defaultModelCompareId = 1;
	repeated int64 modelmergers = 2;
	optional int64 defaultModelMergerId = 3;
	optional int64 defaultRenderEngineId = 4;
	repeated int64 modelcompares = 5;
	optional int64 defaultSerializerId = 6;
	optional int64 oid = 7;
	repeated int64 services = 8;
	optional int32 rid = 9;
	optional int64 defaultObjectIDMId = 10;
	repeated int64 objectIDMs = 11;
	repeated int64 queryengines = 12;
	repeated int64 serializers = 13;
	repeated int64 renderEngines = 14;
	optional int64 defaultQueryEngineId = 15;
	repeated int64 deserializers = 16;
}

message GetUserSettingsResponse {
	optional string errorMessage = 1;
	optional SUserSettings value = 2;
}

message GetUsersProjectsRequest {
	optional int64 uoid = 1;
}

message GetUsersProjectsResponse {
	optional string errorMessage = 1;
	repeated SProject value = 2;
}

message RemoveUserFromExtendedDataSchemaRequest {
	optional int64 uoid = 1;
	optional int64 edsid = 2;
}

message RemoveUserFromProjectRequest {
	optional int64 uoid = 1;
	optional int64 poid = 2;
}

message RemoveUserFromProjectResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message SendCompareEmailRequest {
	optional SCompareType sCompareType = 1;
	optional int64 mcid = 2;
	optional int64 poid = 3;
	optional int64 roid1 = 4;
	optional int64 roid2 = 5;
	optional string address = 6;
}

message SetRevisionTagRequest {
	optional int64 roid = 1;
	optional string tag = 2;
}

message ShareRevisionRequest {
	optional int64 roid = 1;
}

message ShareRevisionResponse {
	optional string errorMessage = 1;
	optional string value = 2;
}

message TriggerNewExtendedDataRequest {
	optional int64 edid = 1;
}

message TriggerNewRevisionRequest {
	optional int64 roid = 1;
	optional int64 soid = 2;
}

message UndeleteUserRequest {
	optional int64 uoid = 1;
}

message UndeleteUserResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message UpdateGeoTagRequest {
	optional SGeoTag sGeoTag = 1;
}

message UpdateProjectRequest {
	optional SProject sProject = 1;
}

message UpdateRevisionRequest {
	optional SRevision sRevision = 1;
}

message UploadFileRequest {
	optional SFile file = 1;
}

message UploadFileResponse {
	optional string errorMessage = 1;
	optional int64 value = 2;
}

message UserHasCheckinRightsRequest {
	optional int64 uoid = 1;
	optional int64 poid = 2;
}

message UserHasCheckinRightsResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

message UserHasRightsRequest {
	optional int64 poid = 1;
}

message UserHasRightsResponse {
	optional string errorMessage = 1;
	optional bool value = 2;
}

